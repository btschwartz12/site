// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/drive/files": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all files",
                "tags": [
                    "drive"
                ],
                "summary": "Get all files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.File"
                            }
                        }
                    }
                }
            }
        },
        "/api/drive/files/permalinks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all permalinks",
                "tags": [
                    "drive"
                ],
                "summary": "Get all permalinks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Permalink"
                            }
                        }
                    }
                }
            }
        },
        "/api/drive/files/permalinks/{id}/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Serve a permalink",
                "tags": [
                    "drive"
                ],
                "summary": "Serve a permalink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permalink ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/drive/files/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a file",
                "tags": [
                    "drive"
                ],
                "summary": "Get a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.File"
                        }
                    }
                }
            }
        },
        "/api/drive/files/{id}/permalink": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generate a permalink",
                "tags": [
                    "drive"
                ],
                "summary": "Generate a permalink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "file_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Duration (300s, 2h45m, etc.)",
                        "name": "duration",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.Permalink"
                        }
                    }
                }
            }
        },
        "/api/drive/upload": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upload a file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drive"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notes",
                        "name": "notes",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.File"
                        }
                    }
                }
            }
        },
        "/api/pics": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get pictures",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pictures"
                ],
                "summary": "Get pictures",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Picture"
                            }
                        }
                    }
                }
            }
        },
        "/api/pics/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a picture",
                "tags": [
                    "pictures"
                ],
                "summary": "Delete a picture",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Picture ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/pics/update_likes/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the likes and dislikes of a picture",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pictures"
                ],
                "summary": "Update likes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Picture ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Likes and Dislikes",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateLikesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.Picture"
                        }
                    }
                }
            }
        },
        "/api/pics/upload": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upload a picture",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pictures"
                ],
                "summary": "Upload a picture",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Picture file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description of the picture",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.Picture"
                        }
                    }
                }
            }
        },
        "/api/visitors": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the visitors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "visitors"
                ],
                "summary": "Get visitors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Visitor"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.updateLikesRequest": {
            "type": "object",
            "properties": {
                "num_dislikes": {
                    "type": "integer"
                },
                "num_likes": {
                    "type": "integer"
                }
            }
        },
        "repo.File": {
            "type": "object",
            "properties": {
                "extension": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "pit": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "repo.Permalink": {
            "type": "object",
            "properties": {
                "durationSeconds": {
                    "type": "integer"
                },
                "expires": {
                    "type": "string"
                },
                "file": {
                    "$ref": "#/definitions/repo.File"
                },
                "pit": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "repo.Picture": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "numDislikes": {
                    "type": "integer"
                },
                "numLikes": {
                    "type": "integer"
                },
                "pit": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "repo.Visitor": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "pit": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Please provide a valid api token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "An API",
	Description:      "Nothing to see here",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
